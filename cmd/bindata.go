// Package cmd Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// templates/index.html
// templates/load_log_form.go.html
// templates/searchpage.go.html
package cmd

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"net/http"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}


type assetFile struct {
	*bytes.Reader
	name            string
	childInfos      []os.FileInfo
	childInfoOffset int
}

type assetOperator struct{}

// Open implement http.FileSystem interface
func (f *assetOperator) Open(name string) (http.File, error) {
	var err error
	if len(name) > 0 && name[0] == '/' {
		name = name[1:]
	}
	content, err := Asset(name)
	if err == nil {
		return &assetFile{name: name, Reader: bytes.NewReader(content)}, nil
	}
	children, err := AssetDir(name)
	if err == nil {
		childInfos := make([]os.FileInfo, 0, len(children))
		for _, child := range children {
			childPath := filepath.Join(name, child)
			info, errInfo := AssetInfo(filepath.Join(name, child))
			if errInfo == nil {
				childInfos = append(childInfos, info)
			} else {
				childInfos = append(childInfos, newDirFileInfo(childPath))
			}
		}
		return &assetFile{name: name, childInfos: childInfos}, nil
	} else {
		// If the error is not found, return an error that will
		// result in a 404 error. Otherwise the server returns
		// a 500 error for files not found.
		if strings.Contains(err.Error(), "not found") {
			return nil, os.ErrNotExist
		}
		return nil, err
	}
}

// Close no need do anything
func (f *assetFile) Close() error {
	return nil
}

// Readdir read dir's children file info
func (f *assetFile) Readdir(count int) ([]os.FileInfo, error) {
	if len(f.childInfos) == 0 {
		return nil, os.ErrNotExist
	}
	if count <= 0 {
		return f.childInfos, nil
	}
	if f.childInfoOffset+count > len(f.childInfos) {
		count = len(f.childInfos) - f.childInfoOffset
	}
	offset := f.childInfoOffset
	f.childInfoOffset += count
	return f.childInfos[offset : offset+count], nil
}

// Stat read file info from asset item
func (f *assetFile) Stat() (os.FileInfo, error) {
	if len(f.childInfos) != 0 {
		return newDirFileInfo(f.name), nil
	}
	return AssetInfo(f.name)
}

// newDirFileInfo return default dir file info
func newDirFileInfo(name string) os.FileInfo {
	return &bindataFileInfo{
		name:    name,
		size:    0,
		mode:    os.FileMode(2147484068), // equal os.FileMode(0644)|os.ModeDir
		modTime: time.Time{}}
}

// AssetFile return a http.FileSystem instance that data backend by asset
func AssetFile() http.FileSystem {
	return &assetOperator{}
}

var _templatesIndexHtml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x57\x5f\x8f\xa3\x36\x10\x7f\xcf\xa7\x98\xf5\xea\x9a\x87\x2b\x38\xc9\xde\x5e\x7b\x84\x70\x0f\xd5\x76\x55\xa9\x95\xfa\x5e\x55\x2b\x83\x0d\x38\x31\x36\x67\x9b\xfc\xb9\xaa\xdf\xbd\x32\x84\xfc\x61\x59\x50\xda\x3e\x1d\x52\x14\x6c\xcf\xcf\x33\xf3\xf3\xcc\x30\x0e\x73\x5b\x88\x68\x32\x09\x73\x46\x68\x34\x01\x00\x08\x05\x97\x1b\xc8\x35\x4b\x57\x28\xb7\xb6\x34\x01\xc6\xa9\x92\xd6\xf8\x99\x52\x99\x60\xa4\xe4\xc6\x4f\x54\x81\x79\xa2\xe4\xe7\x94\x14\x5c\x1c\x56\xbf\x11\xcb\x34\x27\xe2\xfd\x2f\x89\x92\x06\x81\x66\x62\x85\x8c\x3d\x08\x66\x72\xc6\x2c\xba\xdc\xba\xbb\x06\xf6\x50\xb2\x15\xb2\x6c\x6f\x71\x62\x0c\xaa\x45\x9b\xe7\xda\x8a\x84\xca\xb5\xf1\x13\xa1\x2a\x9a\x0a\xa2\x59\x6d\x05\x59\x93\x3d\x16\x3c\x36\xb8\x38\xda\xc0\xbf\x32\x3c\xf3\x3f\xfd\xe0\x3f\xba\xed\x2e\xa7\xfd\x82\x4b\xdf\xa9\x38\x9a\x53\x1b\x11\x9d\xf4\xc5\x8a\x1e\xe0\xaf\x0b\xf5\x00\x94\x9b\x52\x90\x43\x00\xa9\x60\xfb\xe5\xd5\x52\xc1\xa5\x97\x33\x9e\xe5\x36\x80\xf9\x6c\xb6\xcd\xaf\x97\x1d\xc0\xa3\x5c\xb3\xc4\x72\x25\x03\x48\x94\xa8\x0a\x79\x96\xf9\xfb\xf4\x56\x10\x2e\x3b\x6a\x1d\x38\x80\x39\xcc\x80\x54\x56\xf5\x81\x7a\x6c\x8d\x49\xb2\xc9\xb4\xaa\x24\x0d\xe0\x3e\x4d\xd3\x3e\x98\xcf\x65\x59\x59\x2f\xe5\x4c\x50\xa8\xdf\xff\xa8\xd9\xa7\xc4\xb2\x3f\x83\x54\x25\x95\x81\xf7\x20\x48\xcc\xc4\xf7\xa3\x20\x77\x62\x37\x83\x58\x41\xb8\xb8\x19\x55\x12\x63\x76\x4a\xd3\x0e\xb0\xc3\x40\xa2\x84\xd2\x01\xdc\xb3\x4f\x73\xf6\xf1\xe1\x5f\xfa\x7f\x93\xdf\xb7\xf9\x7b\xbb\x9f\x9d\x13\x56\x9a\x32\xed\xc5\xca\x5a\x55\x04\xb0\x28\xf7\x60\x94\xe0\xf4\xb5\xc7\x8d\xf4\xde\x33\x39\xa1\x6a\x17\x80\x54\x92\x75\xf9\x08\xf1\x31\xfe\x43\xdc\x64\xff\x24\x74\x51\x15\x4d\x42\xca\xb7\x90\x08\x62\xcc\x0a\x99\x26\x7e\x51\x14\x62\xca\xb7\xd1\x24\x74\xd1\x7a\x4c\x9f\x84\x49\xcb\xf4\x39\x7f\x86\x70\x7d\x32\x89\x92\x96\x70\xc9\x34\x8a\xae\x0c\xbf\x94\xf9\xea\x51\x56\xda\xdc\x9b\x43\xa6\xd9\x01\x84\xcb\x37\x26\xbd\x0f\xa0\xd5\x0e\x5d\xa1\xea\xa7\xf6\x68\x85\x4e\x69\xcb\xa5\xe0\x92\x79\xb1\x50\xc9\x66\x09\x25\xa1\x94\xcb\x2c\x80\x07\x47\xdd\x87\x1f\xcb\x3d\xcc\x8e\x2f\xcb\x23\xb9\x01\xcc\xcf\xac\x3e\x3d\x3d\x2d\x51\x34\x09\xef\x3c\xef\x95\xaa\x30\x55\xba\x38\x7b\x22\xc0\xcc\x17\x08\x0a\x66\x73\x45\x57\xa8\x54\xc6\x22\x20\x35\x07\x2b\x74\xdf\x71\xb0\xc7\xd1\xa9\x56\xbb\x69\xbf\x54\x57\xf2\xa8\x6c\x48\xfa\x9a\xf3\x9e\xa5\xff\xd1\x9c\xcb\x48\x1e\x37\xad\x46\xd7\x90\x16\xbf\x25\x82\xbb\xf4\x9b\x36\xdf\x81\x69\x9d\x30\x53\x90\xa4\x38\x0f\x38\x6d\x5f\xf1\xc8\xd6\x4d\x59\x48\x95\x6e\x01\xd1\x93\x0b\x52\x38\xa8\x4a\x43\x3d\x13\xe2\x5a\xe6\x1b\x65\xaf\x2d\x20\x2d\x81\xe7\xb1\xe3\xf0\x34\xba\x81\xc6\x13\xe6\x92\xc9\x76\xf2\xbf\x90\x79\xa1\xa8\x49\xdb\x69\x2a\x14\xb1\x01\x68\x97\xe4\xcb\x31\x1a\x48\x4b\x41\xc9\xe5\xc6\x73\x35\x79\xda\xf4\x0b\xd3\xfb\xbb\x69\x14\xc6\xd1\xcf\x4a\x67\xca\xc2\xef\x47\x53\x3f\x87\x38\x8e\x42\x4c\x86\x6c\x1d\x70\x66\xf0\xe8\x63\xfd\x06\xa1\x37\x04\x45\x5c\x59\xab\xe4\xf1\x18\x4d\x15\x17\xdc\xb6\x87\x18\x5b\xf9\x22\x54\xc6\xe5\xb4\x53\x03\x20\xb6\xd2\xfd\x3c\x41\x74\xc6\x60\x47\xb6\xcc\x78\x2c\x4d\x59\x62\x81\x4b\xca\x33\x35\xc2\xe2\xaf\x6e\xd7\x01\x42\x1a\xa3\x06\x19\x79\x3d\xed\x2a\x63\x34\xf1\xbc\x9e\xb5\x8b\xca\xee\x0a\xf8\x28\x69\xc8\x39\xb8\xcb\xb9\x65\x40\x89\xde\x30\xe9\x7d\x6c\xd3\xe4\x0d\x30\x34\xb1\xd1\x74\x8e\x98\x54\x36\xc7\x4d\xdf\x8a\x6b\x06\x51\xfb\x89\x70\x01\xe3\x59\x4d\xa4\x71\xe6\x06\xee\x03\x39\xb0\x63\xd7\x2c\xc1\x52\x3b\x22\x5e\x43\x78\x91\xc1\x8e\x53\x9b\xaf\xd0\xc3\xac\xdc\x23\x20\xc2\xae\xd0\x73\x6d\x10\x7c\xf7\xa5\x52\x76\xf9\xdc\xfc\xb9\xa3\x50\x3d\x5f\xb4\xbe\xc7\xe8\xe4\xdc\x15\x57\xa5\x50\x84\xfa\x3b\xbe\xe1\x05\xa3\x9c\xf8\x4a\x67\xd8\x8d\x4a\x37\xc2\x89\x2a\x0a\x25\x0d\xb6\x79\x55\xc4\xf8\x11\x3f\x3e\xe0\x46\xfd\xcb\xbb\xc5\xe2\xf9\xdd\x62\xf1\xe2\x14\xfb\x66\x9b\xe1\xc7\xf9\xa2\xdc\x7b\x6f\xac\xfa\xa5\xcc\xd0\x58\xd9\x18\x4e\x76\x68\x03\x0e\x76\xdc\xe6\xd0\x28\x1a\x08\xbe\x37\x52\xf5\xcd\xb8\x7b\x35\xdd\xed\x3d\x3a\xc3\x36\x4a\xee\xef\x50\xf4\x93\x66\xc4\x32\x20\x49\xa2\x2a\x69\x4f\xba\x43\xdc\x36\x39\xcd\x70\xa4\xc3\x19\xec\x9c\x70\xd3\x3a\x4d\x42\x93\x68\x5e\xda\xcb\x6b\xcf\x9a\x6c\x49\x33\x8b\xae\x0f\x77\xe4\xca\xb3\xfe\x52\x31\x7d\xc0\x0b\x7f\xe1\xcf\x8f\x83\xfa\x8e\xb3\x36\x4e\x6d\xb3\x63\x34\xa2\x70\xd2\x1b\x55\xb7\xdf\xb5\xd6\xaf\xaf\x5a\x1d\x33\x70\xd3\x5e\xba\x7e\xb3\xbe\x75\xfe\x13\x00\x00\xff\xff\x38\xd2\x49\xf6\x7d\x0e\x00\x00"

func templatesIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesIndexHtml,
		"templates/index.html",
	)
}

func templatesIndexHtml() (*asset, error) {
	bytes, err := templatesIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/index.html", size: 3709, mode: os.FileMode(436), modTime: time.Unix(1574323770, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLoad_log_formGoHtml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x94\x4f\x6f\x13\x31\x10\xc5\xef\xf9\x14\xc3\x9c\xe0\x00\x86\xa2\x5e\x90\x6d\x09\x15\x10\x87\xa2\x56\xa2\x1c\x38\x55\xd3\x78\xb2\xbb\x92\xbd\xb3\xb2\xbd\x0d\xe1\xd3\x23\xef\x3a\xff\xa8\x2a\x1a\xa4\xee\x25\x7a\xfe\xf3\xfc\x7b\x33\xca\xe8\x17\x9f\xae\x2e\x6e\x7e\x5e\x7f\x86\x36\x07\x6f\x17\x7a\xfb\xc3\xe4\xec\x02\x00\x40\xe7\x2e\x7b\xb6\x97\x42\x0e\x2e\xa5\xd1\x6a\xd6\x0b\xad\xe6\x33\xfa\x4e\xdc\xc6\x2e\xf4\x4a\x62\x80\xc0\xb9\x15\x67\xf0\xfa\xea\xfb\x0d\x02\x2d\x73\x27\xbd\x41\xe5\xa5\x51\x5e\xc8\x21\x74\xce\xa0\x97\xe6\xb6\xa8\xdb\x72\x05\x81\xfb\x65\xde\x0c\x6c\x30\x8c\x3e\x77\x03\xc5\xac\xca\xc6\x6b\x47\x99\xb0\x32\xac\x3a\xf6\x2e\x71\xae\xd2\x73\xc3\xbd\xb3\x97\xd2\xc0\x45\x64\x2a\xaf\xc0\x17\x89\x41\xab\xba\x53\xc9\xe9\xae\x90\x42\xfd\x74\x8e\x7b\x31\x2f\x38\x98\xd2\x18\xbc\x27\x3f\x32\xac\x24\x42\x6e\x19\x5a\x49\x19\xa6\x37\xdf\xa0\xfd\x2a\x29\x7f\xd0\x2a\xbb\x07\x97\xad\xee\xfa\x61\xcc\x30\xe3\x67\xfe\x95\x11\x7a\x0a\x6c\xb0\x18\x20\x4c\xa6\x06\x03\xf5\x23\x79\x84\xd4\xfd\x66\x83\xef\xcf\x51\xd9\x63\x3b\xad\x0e\xc9\x9e\x8e\x49\xc3\xe0\xbb\xe5\x1c\x7f\xa2\x45\xfb\x71\xbf\x74\x2a\xf3\x81\xdb\x0e\x7d\x4c\x1c\x9f\x01\xdc\x4b\xb3\xea\x3c\xcf\xd0\xf0\xb2\x2c\x49\xcf\xe0\xba\x34\x78\xda\xc0\xba\xe5\x1e\x5a\xb9\xe7\xf9\x74\x90\x31\x95\x03\x93\x88\xb2\x7e\x85\xb6\xdc\x3e\x35\x5f\x7d\x74\x97\xed\x19\x72\x05\x4e\x89\x1a\xde\x36\xe3\xdb\x2c\x1f\x03\x2d\x70\x14\x99\x2a\x5f\xbd\x8c\xb0\x8e\x34\x18\x4c\xb2\xca\x08\x34\x66\x59\x4a\x18\x3c\x67\x36\x28\x3d\x1e\xd9\x94\x6f\x29\x3e\x19\x7c\x77\xfe\x16\x4b\x6d\x92\xc1\xb3\x73\x2c\x71\xaa\xf9\xc9\xc9\xec\x8f\xa1\xfc\x39\x81\x4a\x97\xa0\x54\xec\x09\x75\x9e\x0b\x7b\x5c\xe7\xff\x28\x6a\xc9\x32\x50\x6f\xf0\x0c\xed\x83\xa0\x47\x0f\xa6\xf1\x2e\x74\xbb\xd6\x6e\x55\xed\x6c\x95\xff\xb0\x88\x9c\x78\xe7\x50\x45\x35\x98\xd5\x5f\x7c\x8f\x84\xd1\xea\x60\xcc\x68\xb5\x9f\x54\x0b\x3d\xcd\xb1\x32\x29\xeb\x88\x54\xd3\x70\xfd\x13\x00\x00\xff\xff\xb6\xc8\xcb\x63\x73\x05\x00\x00"

func templatesLoad_log_formGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesLoad_log_formGoHtml,
		"templates/load_log_form.go.html",
	)
}

func templatesLoad_log_formGoHtml() (*asset, error) {
	bytes, err := templatesLoad_log_formGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/load_log_form.go.html", size: 1395, mode: os.FileMode(420), modTime: time.Unix(1582603806, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSearchpageGoHtml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x56\x5f\x6f\xdb\x38\x12\x7f\x96\x3f\xc5\x54\xbd\x56\xc9\xd5\xb6\xea\x5c\xf3\xe2\xc8\x06\x72\x89\x8b\x16\xd7\x5e\x8b\xda\x8b\xc5\xee\x4b\x40\x89\x23\x89\x0d\x45\xaa\xe4\xc8\xb6\x1a\xf8\xbb\x2f\x28\xca\x76\xd2\x26\xdd\x97\x85\x1f\x4c\xce\x70\x7e\xf3\x1b\xce\x1f\x2a\x79\x76\xfd\xe9\x6a\xf5\xc7\xe7\x05\x94\x54\xc9\xf9\x20\xd9\xff\x21\xe3\xf3\x41\x90\x90\x20\x89\xf3\x0d\xa6\x45\x23\x92\xd8\xef\x06\x41\x62\x33\x23\x6a\x9a\x0f\x82\x20\x6f\x54\x46\x42\x2b\xe0\xfa\x4a\x22\x33\x27\xa7\x70\x37\x08\x82\x80\xeb\xac\xa9\x50\xd1\xb8\x40\x5a\x48\x74\xcb\xff\xb6\xef\xf9\x49\x74\x8b\xed\x46\x1b\x1e\x9d\x8e\xd7\x4c\x36\x08\x33\x88\xa2\x41\x10\xec\x1e\xc1\x5a\x89\x0a\xff\x16\x8f\xbe\xdf\x87\xba\x5c\x2c\x57\xd1\x2f\xcf\xf3\xc6\x30\xe7\xe4\xbe\xd5\xe4\xbc\xea\x39\x24\xf1\x21\xb4\xc4\x52\xdb\x45\x0b\xf0\x3c\x6b\x2c\xe9\x0a\x8d\xed\xc8\xe4\x5a\xd1\x28\x67\x95\x90\xed\x14\xc2\x95\xc1\xb4\xc9\x4a\x24\xf8\xb8\x0c\x87\x70\x69\x04\x93\x43\x78\x87\x72\x8d\x24\x32\x36\x04\xcb\x94\x1d\x59\x34\x22\xbf\x18\x04\x41\xaa\x0d\x47\x33\xca\xb4\x94\xac\xb6\x38\x85\xfd\xca\x29\x37\x82\x53\x39\x85\xc9\xeb\xd7\x2f\xdc\x96\x58\x2a\x71\x24\x59\xab\x1b\x9a\x42\x2e\xb6\xc8\x2f\x1c\x9f\xdd\xe0\x07\x56\xc4\x87\x0f\xb6\x65\xc7\xd3\xbb\x9a\xc2\xa4\xde\x82\xd5\x52\x70\x78\xce\xb9\x43\x08\x6a\xc6\xb9\x50\xc5\x14\xde\xd4\xdb\xce\xaf\x36\x7c\xb4\x31\xac\x9e\x42\x6a\x90\xdd\x8e\x9c\xe0\x09\x57\x66\xaa\xa8\x1c\x65\xa5\x90\xfc\x04\xd7\xa8\x4e\xef\x52\x96\xdd\x16\x46\x37\x8a\xbb\xb0\xb4\x99\xc2\xf3\xfc\xcc\xfd\x2e\x1e\xb3\x2e\xf5\x1a\x0d\x3c\x66\xe4\xc8\xfd\x6c\xe1\x63\xe9\x19\x8f\x48\xd7\x53\x98\x9c\x79\xda\x7b\x61\xaa\x89\x74\x75\x94\x13\x6e\x69\xc4\xa4\x28\xd4\x14\x24\xe6\xd4\xdd\xfb\xcf\xfe\xde\x5c\x5d\xbe\x3d\x7f\xed\x94\xbd\x64\x53\x0a\xc2\x43\xd8\x49\xdc\x57\x40\x12\xfb\x76\x48\x52\xcd\xdb\xf9\x00\x00\x20\x29\x27\xf3\x25\x32\x93\x95\xf0\x41\x17\x49\x5c\x4e\x7a\x79\xae\x4d\x05\xac\x2b\xe3\x59\x18\xdb\xee\x88\xd4\x45\x08\x15\x52\xa9\xf9\x2c\xfc\xfc\x69\xb9\x0a\xfd\xe1\xce\xa0\xcb\xf1\x71\xef\x65\xe6\xa1\xc0\x0b\xf9\x3c\x91\x2c\x45\x09\xb9\x36\xb3\xb0\xef\xa3\x70\xfe\x3f\xbf\x98\x42\x12\x77\xea\x79\x12\x93\xeb\xdd\x20\x08\x3a\x1b\xa1\xea\x86\x40\xb1\x0a\x8f\x46\x20\xf8\xbd\x0d\xb5\x35\xce\x42\x77\x69\x21\x74\x3d\x31\x0b\xef\xee\x60\xdc\xeb\x61\xb7\x0b\xa1\xeb\xfc\x83\x09\x90\x06\x1f\xda\x10\x7e\xb3\x08\x2f\x41\x1b\x78\xe5\xa4\x99\xae\x52\xa1\x10\x72\x21\x09\x0d\x30\xc5\x61\xe4\x94\xcf\x9c\x52\x61\xc1\x08\xc7\xb0\xd8\xb2\xaa\x96\x08\x11\x1a\x93\x71\x78\x09\x68\x4c\x07\xf0\x0c\x4b\x64\x92\x4a\x78\x05\xa3\xb4\x11\x92\x47\xb0\x11\x52\xf6\xbe\x20\xd3\x8a\x98\x50\x16\xbc\x9d\x03\xf7\x96\xb8\xcd\x64\xc3\x11\xf6\xe6\xfb\x7d\x87\x31\x86\x25\x31\x43\xb0\x11\x54\x42\xb4\x5c\x7c\x58\x5c\xad\x22\xc7\x29\xb2\x28\x31\xa3\xc8\x51\xc3\x2d\x66\x0d\x21\x18\xb6\x01\x2f\x06\xfb\x4d\x7a\x1b\xcb\x2a\x04\x12\x95\xd3\xaa\xe2\x1e\xff\x9e\x56\xda\xc2\x57\xeb\xa6\x16\x23\xb6\x07\x85\x7f\x43\x6e\x74\x05\x52\x17\xc3\x4e\x7b\x83\x2c\x2b\x4f\x2a\xb4\x96\x15\x78\x0a\xbf\xbf\x5b\x7c\x59\x78\xc5\x9a\x49\xc1\x8f\x9a\x19\x4c\xe0\xf2\xff\xd7\xbd\xd1\x96\x0c\xcb\xe8\xe4\x80\xe0\x67\xd6\x10\xa2\x7f\x8d\xad\xae\x30\x17\x28\xb9\x4b\xed\x8d\x36\x37\x35\xa3\x32\x3a\x05\x29\x6e\x11\xa2\x17\x4e\xed\x52\xfa\x22\x8a\xc2\x71\xfc\x78\x51\xf8\xc4\x67\x25\x66\xb7\xa9\xde\x86\x7d\x91\x58\x6d\xa8\x9b\x1c\x87\x6a\xb8\x5e\x2c\xaf\x42\x70\x35\x71\xd0\xc1\x6e\x37\x5f\x6a\x43\x70\x8d\x36\x43\xe5\xda\xf0\x17\x75\xb7\x1f\xba\xbe\xf0\x8e\xbb\x27\x2a\x6f\x7f\xe0\x7e\xe9\xad\x0e\x09\x18\x02\x16\x63\x98\x9c\x57\xae\x11\x60\x72\x0e\x95\x50\x0d\xa1\x05\x56\xe8\x31\x7c\x32\xc0\x79\x5c\x55\x71\xdb\xb6\x2d\x94\xe5\xb4\xaa\xa6\xd6\xc2\xe8\x31\x69\xf8\xc4\xbd\x78\xd2\xf4\xdd\xd3\x75\xff\x4f\x10\xa5\xef\x3f\x52\xfc\x53\x2b\x7c\x0a\xd6\x83\xd8\x26\xad\xc4\x11\xc6\xb2\x35\xde\x74\x6b\x7b\x48\xc0\x7d\x51\x8f\xdd\x58\xf4\x6d\xc7\xd6\x08\x54\x22\x64\x8d\x31\xa8\xc8\xc3\x58\xdf\x91\xd6\x0a\xad\xc6\xf0\x9e\xc0\x96\xba\x91\x1c\x58\x43\xba\xb3\x10\x0a\xdc\xe0\x01\x83\xdf\x1a\xb4\x04\x69\x43\x20\x72\x68\x75\x03\x1b\xa6\xc8\x99\xf7\x2d\x6b\x30\x73\x1d\x9e\xb6\x20\x7c\x8b\x29\x66\x8c\xde\x00\xd7\x1b\xd5\x39\x3e\x76\x82\x9b\x97\x59\x09\x95\x28\x4a\x82\x14\x81\x8b\x3c\xc7\x8e\x54\x57\xfb\xee\x70\x6d\x70\x2d\x74\x63\xa1\xd6\x96\xf6\xde\x87\xc0\xf8\xd7\xc6\xd2\x11\x2e\x37\xae\xc7\x9c\xb7\x4c\x8a\xec\x16\xa8\x14\xd6\x71\x24\x17\xce\xaa\x44\x05\x85\x06\x37\xc1\x1d\xd1\x9a\x15\x0f\xcf\x22\x48\xa1\x6e\x1d\xe5\xf7\xd7\xc0\x0a\x26\x54\xe8\xef\xfe\xa5\x4a\x6d\x7d\x91\x30\x28\x0d\xe6\xb3\x30\x96\xba\x88\xa5\x66\x3c\x9c\x2f\xdd\xa5\x7c\xd0\x05\x7c\x64\xaa\x61\x52\xb6\x49\xcc\xfa\x7c\x75\x99\x7b\x30\x79\xe3\x1f\xe7\x71\x37\xa0\xfb\xe4\xba\xf7\xdb\xd6\x4c\xcd\xc2\xb3\x10\xba\x37\x67\x16\x66\xa8\x08\x4d\x4f\x22\x78\x90\x7d\x1f\xd4\x21\xfb\x06\x2d\x52\x08\x5a\x75\xb1\xcc\xc2\xc3\x57\xd4\x45\x38\xef\xd8\x3f\x80\xe8\xcb\xa3\x2f\xa0\xc7\xcb\xc9\x6f\xef\xc7\xf2\x13\xd1\xff\xfc\x73\x44\xfd\x27\xda\x03\xb2\xbf\xba\x40\xa7\xf4\xef\x5d\x90\xc4\xee\xa9\x74\x8b\xd2\xc4\xdd\xdf\xd9\xfc\x0b\xda\x46\xd2\x34\x89\xcb\x33\x27\xa9\xe7\x6f\xdd\x7b\xdd\x0d\x9e\x4c\x37\x8a\x60\xb7\xeb\xeb\xd3\x26\x71\xed\x21\x9d\x52\x37\xe4\x88\xef\x76\x83\x24\xf6\x6f\x74\x12\x77\x1f\xb2\x7f\x05\x00\x00\xff\xff\x0a\x4a\x8c\xb3\xdf\x0a\x00\x00"

func templatesSearchpageGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesSearchpageGoHtml,
		"templates/searchpage.go.html",
	)
}

func templatesSearchpageGoHtml() (*asset, error) {
	bytes, err := templatesSearchpageGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/searchpage.go.html", size: 2783, mode: os.FileMode(420), modTime: time.Unix(1583401546, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/index.html":            templatesIndexHtml,
	"templates/load_log_form.go.html": templatesLoad_log_formGoHtml,
	"templates/searchpage.go.html":    templatesSearchpageGoHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"index.html":            &bintree{templatesIndexHtml, map[string]*bintree{}},
		"load_log_form.go.html": &bintree{templatesLoad_log_formGoHtml, map[string]*bintree{}},
		"searchpage.go.html":    &bintree{templatesSearchpageGoHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
